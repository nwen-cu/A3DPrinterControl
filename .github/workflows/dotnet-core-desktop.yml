name: Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest 
    
    steps:
    # Chekcout
    - name: Checkout
      uses: actions/checkout@v2.3.1
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1.5.0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1
      
    # Build
    - name: Build
      run: dotnet build
    
    # Compress archive
    - name: Compress archive
      run: Compress-Archive -Path .\A3DPrinterControl\bin\Debug\netcoreapp3.1\* a3dp-release.zip
    
    # Upload release archive
    - name: Upload release archive
      uses: actions/upload-artifact@v2
      with:
        name: release-archive
        path: .\a3dp-release.zip
  
  tag:
    needs: build
    runs-on: ubuntu-latest
        
    steps:
    # Chekcout
    - name: Checkout
      uses: actions/checkout@v2.3.1
      with:
        fetch-depth: 0
   
    # Bump version
    - name: Bump tag version
      id: bump-tag-version
      uses: anothrNick/github-tag-action@1.22.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP : patch
        WITH_V: true
    
    outputs: 
      new-tag: ${{ steps.bump-tag-version.outputs.new_tag }}
      
  release:
    needs: tag
    runs-on: windows-latest 
    
    steps:
    # Create Release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.tag.outputs.new-tag }}
        release_name: Release ${{ needs.tag.outputs.new-tag }}
        draft: false
        prerelease: true
 
    # Download release archive
    - name: Download release archive
      uses: actions/download-artifact@v2
      with:
        name: release-archive
        
    #Upload release archive
    - name: Upload release archive
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./a3dp-release.zip
        asset_name: a3dp-release.zip
        asset_content_type: application/zip
  

